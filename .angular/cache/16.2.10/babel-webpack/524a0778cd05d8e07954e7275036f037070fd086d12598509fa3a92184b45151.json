{"ast":null,"code":"import * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/common/http\";\nclass PatientsService {\n  /**\n   * @param http HTTP client\n   */\n  constructor(http) {\n    this.http = http;\n  }\n  /**\n   * Fetches all characters.\n   *\n   * @return list of characters\n   */\n  getCharacters() {\n    return this.http.get('http://localhost:8083/patients');\n  }\n  /**\n   * Fetches single characters.\n   *\n   * @param uuid character's id\n   * @return single characters\n   */\n  getCharacter(uuid) {\n    return this.http.get('http://localhost:8083/patients/' + uuid);\n  }\n  /**\n   * Removes single character.\n   *\n   * @param uuid character's id\n   */\n  deleteCharacter(uuid) {\n    return this.http.delete('http://localhost:8083/patients/' + uuid);\n  }\n  /**\n   * Updates single character.\n   *\n   * @param uuid character's id\n   * @param request request body\n   */\n  putCharacter(uuid, request) {\n    return this.http.put('http://localhost:8083/patients/' + uuid, request);\n  }\n  /**\n  * Updates single character.\n  *\n  * @param uuid character's id\n  * @param request request body\n  */\n  postCharacter(request) {\n    return this.http.put('http://localhost:8083/patients/', request);\n  }\n  static #_ = this.ɵfac = function PatientsService_Factory(t) {\n    return new (t || PatientsService)(i0.ɵɵinject(i1.HttpClient));\n  };\n  static #_2 = this.ɵprov = /*@__PURE__*/i0.ɵɵdefineInjectable({\n    token: PatientsService,\n    factory: PatientsService.ɵfac\n  });\n}\nexport { PatientsService };","map":{"version":3,"names":["PatientsService","constructor","http","getCharacters","get","getCharacter","uuid","deleteCharacter","delete","putCharacter","request","put","postCharacter","_","i0","ɵɵinject","i1","HttpClient","_2","factory","ɵfac"],"sources":["C:\\Users\\kasia\\IdeaProjects\\auiLab5\\src\\app\\patients\\service\\patients.service.ts"],"sourcesContent":["import { Injectable } from '@angular/core';\r\nimport { HttpClient } from \"@angular/common/http\";\r\nimport { Observable } from \"rxjs\";\r\nimport { Patients } from \"../model/patients\";\r\nimport { PatientsDetails } from \"../model/patients-details\";\r\nimport { PatientsForm } from \"../model/patients-form\";\r\n\r\n@Injectable()\r\nexport class PatientsService {\r\n\r\n  /**\r\n   * @param http HTTP client\r\n   */\r\n  constructor(private http: HttpClient) {\r\n\r\n  }\r\n\r\n  /**\r\n   * Fetches all characters.\r\n   *\r\n   * @return list of characters\r\n   */\r\n  getCharacters(): Observable<Patients> {\r\n    return this.http.get<Patients>('http://localhost:8083/patients');\r\n  }\r\n\r\n  /**\r\n   * Fetches single characters.\r\n   *\r\n   * @param uuid character's id\r\n   * @return single characters\r\n   */\r\n  getCharacter(uuid: string): Observable<PatientsDetails> {\r\n    return this.http.get<PatientsDetails>('http://localhost:8083/patients/' + uuid);\r\n  }\r\n\r\n  /**\r\n   * Removes single character.\r\n   *\r\n   * @param uuid character's id\r\n   */\r\n  deleteCharacter(uuid: string): Observable<any> {\r\n    return this.http.delete('http://localhost:8083/patients/' + uuid);\r\n  }\r\n\r\n  /**\r\n   * Updates single character.\r\n   *\r\n   * @param uuid character's id\r\n   * @param request request body\r\n   */\r\n  putCharacter(uuid: string, request: PatientsForm): Observable<any> {\r\n    return this.http.put('http://localhost:8083/patients/' + uuid, request);\r\n  }\r\n    /**\r\n   * Updates single character.\r\n   *\r\n   * @param uuid character's id\r\n   * @param request request body\r\n   */\r\n  postCharacter(request: PatientsForm): Observable<any> {\r\n    return this.http.put('http://localhost:8083/patients/', request);\r\n  }\r\n\r\n}\r\n"],"mappings":";;AAOA,MACaA,eAAe;EAE1B;;;EAGAC,YAAoBC,IAAgB;IAAhB,KAAAA,IAAI,GAAJA,IAAI;EAExB;EAEA;;;;;EAKAC,aAAaA,CAAA;IACX,OAAO,IAAI,CAACD,IAAI,CAACE,GAAG,CAAW,gCAAgC,CAAC;EAClE;EAEA;;;;;;EAMAC,YAAYA,CAACC,IAAY;IACvB,OAAO,IAAI,CAACJ,IAAI,CAACE,GAAG,CAAkB,iCAAiC,GAAGE,IAAI,CAAC;EACjF;EAEA;;;;;EAKAC,eAAeA,CAACD,IAAY;IAC1B,OAAO,IAAI,CAACJ,IAAI,CAACM,MAAM,CAAC,iCAAiC,GAAGF,IAAI,CAAC;EACnE;EAEA;;;;;;EAMAG,YAAYA,CAACH,IAAY,EAAEI,OAAqB;IAC9C,OAAO,IAAI,CAACR,IAAI,CAACS,GAAG,CAAC,iCAAiC,GAAGL,IAAI,EAAEI,OAAO,CAAC;EACzE;EACE;;;;;;EAMFE,aAAaA,CAACF,OAAqB;IACjC,OAAO,IAAI,CAACR,IAAI,CAACS,GAAG,CAAC,iCAAiC,EAAED,OAAO,CAAC;EAClE;EAAC,QAAAG,CAAA,G;qBAtDUb,eAAe,EAAAc,EAAA,CAAAC,QAAA,CAAAC,EAAA,CAAAC,UAAA;EAAA;EAAA,QAAAC,EAAA,G;WAAflB,eAAe;IAAAmB,OAAA,EAAfnB,eAAe,CAAAoB;EAAA;;SAAfpB,eAAe"},"metadata":{},"sourceType":"module","externalDependencies":[]}